{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-909ccb96241f7ee5f9e4204f93443cf1a451db9a2d5c4fb9a91e9d44fa58706dd3ca39a7b6c723b3141bdf973a9e1707aeecaafaa72f7e70b6d8144d494c7c24",
            "file": "rds-projects/rds-button/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"primary\" | \"secondary\" | \"light\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n\r\n  // Add the inputs and outputs for the component here\r\n  @Input() label: string;\r\n  @Input() type: 'primary' | 'secondary' | 'light' = 'primary';\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'sm';\r\n  @Output() click = new EventEmitter<void>();\r\n\r\n  // Configure the button styles based on the inputs\r\n  // This logic will vary according to the component\r\n  get classes() {\r\n    return [`btn-${this.type}`, `btn-${this.size}`].join(' ');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// Add component specific styles here",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                }
            },
            "templateData": "<!-- Template for the micro front end component -->\r\n<button class=\"btn\" [ngClass]=\"classes\" (click)=\"click.emit()\">{{ label || 'Button' }}</button>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5057135ebec549c1e3c2ed4df614b511abb79f8b003566b5ad1d009179fdd0fc44502e28a8c829441ea36d8b922c5d5b18ceaa8abd95521ec901333bdddc0778-1",
            "file": "rds-projects/rds-carousel/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "controls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "crossFade",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "darkVariant",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "imageItem",
                    "defaultValue": "[\r\n      {\r\n        img: 'https://cdn.pixabay.com/photo/2021/08/25/20/42/field-6574455__480.jpg',\r\n        caption: 'this is the caption section were u can add the caption for the image'\r\n      },\r\n      {\r\n        img : 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg',\r\n        caption: 'this is the caption section were u can add the caption for the image'\r\n      }\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "indicators",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  static count = 0;\r\n    id = '';\r\n\r\n    @Input()\r\n    crossFade = false;\r\n\r\n    @Input()\r\n    darkVariant = false;\r\n\r\n    @Input()\r\n    indicators = false;\r\n\r\n    @Input()\r\n    controls =  false;\r\n    @Input()\r\n    imageItem = [\r\n      {\r\n        img: 'https://cdn.pixabay.com/photo/2021/08/25/20/42/field-6574455__480.jpg',\r\n        caption: 'this is the caption section were u can add the caption for the image'\r\n      },\r\n      {\r\n        img : 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg',\r\n        caption: 'this is the caption section were u can add the caption for the image'\r\n      }\r\n    ];\r\n    constructor(){\r\n      this.id = 'carousel' + AppComponent.count++;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public get classes(): string{\r\n    const mode1 = this.crossFade ? ' carousel-fade' : '';\r\n    const mode2 = this.darkVariant ? ' carousel-dark' : '';\r\n    return 'carousel slide' + mode1 + mode2;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".carousel-caption {\r\n    color: #fff !important;\r\n}\r\n.carousel-indicators [data-bs-target] {\r\n    background-color: #fff !important;\r\n}\r\n.carousel-dark .carousel-control-next-icon, .carousel-dark .carousel-control-prev-icon {\r\n    filter: none !important;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 33
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 41
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1",
            "templateData": "<div [id]=\"id\" [class]=\"classes\" data-bs-ride=\"carousel\" >\r\n  <div *ngIf=\"indicators\" class=\"carousel-indicators\">\r\n      <button type=\"button\" *ngFor=\"let item of imageItem; index as i\" [attr.data-bs-target]=\"'#'+id\" [attr.data-bs-slide-to]=\"i\" [class.active]=\"i===0\"  [attr.aria-label]=\"'Slide '+i\"></button>\r\n\r\n    </div>\r\n  <div class=\"carousel-inner\" >\r\n    <div class=\"carousel-item\" [class.active]=\"i===0\" *ngFor=\"let item of imageItem; index as i\">\r\n      <img src={{item.img}} class=\"d-block w-100\" alt=\"...\">\r\n      <div class=\"carousel-caption d-none d-md-block\">\r\n<!-- <h5>First slide label</h5> -->\r\n<p>{{item.caption}}</p>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<button *ngIf=\"controls\" class=\"carousel-control-prev\" type=\"button\" [attr.data-bs-target]=\"'#'+id\" data-bs-slide=\"prev\">\r\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Previous</span>\r\n  </button>\r\n  <button *ngIf=\"controls\" class=\"carousel-control-next\" type=\"button\" [attr.data-bs-target]=\"'#'+id\" data-bs-slide=\"next\">\r\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"visually-hidden\">Next</span>\r\n  </button>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-256823312c7a80b99adc377cfe8db5fcb423052058319d7921f8c0412bceaae947a1b5ad56c90dd32b1462fa408449d45d7fcf3f4618cb14ed4eda1cd1ad1c86-2",
            "file": "rds-projects/rds-color-picker/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "title",
                    "defaultValue": "'rds-color-picker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "changedValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, ControlValueAccessor {\r\n  title = 'rds-color-picker';\r\n  @Input() value = '';\r\n\r\n  @Output() onItemClick = new EventEmitter<any>();\r\n\r\n  onChange!: (value: string) => void;\r\n  onTouched!: () => void;\r\n  constructor() { }\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn\r\n  }\r\n\r\n  changedValue(event: any) {\r\n    this.onItemClick.emit({ evnt: event, item: event.target.value });\r\n    // this.onChange(event.target.value)\r\n    // this.onTouched()\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "AppComponent-2",
            "templateData": "<label for=\"exampleColorInput\" class=\"form-label\">Color picker</label>\r\n<input type=\"color\" class=\"form-control form-control-color\" id=\"exampleColorInput\" [value]=\"value\" title=\"Choose your color\" (input)=\"changedValue($event)\">\r\n    \r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-cebc2665b99d1e5303b32ec9419db647c775ef4fa89fba510ba347a492b988e01777cbae6b4d97bbae156af2f6a388a4b0d2a9f20c0269a9b18c5bddff93ca7f-3",
            "file": "rds-projects/rds-file-uploader/src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: AppComponent, multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Single file upload'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxfilesize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "multipleFiles",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "role",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"default\" | \"fileUpload\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "EventEmitter"
                },
                {
                    "name": "onItemClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "errorMsg",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "errorSizeInKb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "fileName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "fileSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "fileType",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "result",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: AppComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class AppComponent implements OnInit, ControlValueAccessor {\r\n  onChange!: (value: string[]) => void;\r\n  onTouched!: () => void;\r\n\r\n  value = '';\r\n  @Input()\r\n  size?: string;\r\n\r\n  @Input()\r\n  label = 'Single file upload';\r\n\r\n  @Input()\r\n  multipleFiles = false;\r\n\r\n  @Input() maxfilesize?: any = 5;\r\n  \r\n  result: string = '';\r\n  errorMsg: boolean = false;\r\n  fileName: string = '';\r\n  fileSize?: number;\r\n  errorSizeInKb?: number;\r\n  fileType?: string = '';\r\n\r\n  @Input() role: 'default' | 'fileUpload' = 'default';\r\n\r\n  @Output() click = new EventEmitter<any>();\r\n  @Output() onItemClick = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getValue(event: any) {\r\n    this.onChange(event.target.files);\r\n    this.onTouched();\r\n  }\r\n\r\n  public get classes(): string[] {\r\n    var classList = ['form-control'];\r\n\r\n    if (this.size === 'small') {\r\n      var selectSize = 'form-control-sm';\r\n      classList.push(selectSize);\r\n    } else if (this.size === 'large') {\r\n      var selectSize = 'form-control-lg';\r\n      classList.push(selectSize);\r\n    } else {\r\n      var selectSize = '';\r\n      classList.push(selectSize);\r\n    }\r\n\r\n    return classList;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".files {\r\n    position: relative;\r\n    text-align: center;\r\n    margin: 0;\r\n    width: 100% !important;\r\n    height: 100px;\r\n    overflow: hidden;\r\n    background: #eaeff5 0% 0% no-repeat padding-box;\r\n    border: 1px dashed #9bacbc;\r\n    opacity: 1;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .files input {\r\n    width: 100% !important;\r\n    height: 200px;\r\n    border: none;\r\n    padding: 0;\r\n    background: transparent;\r\n    text-align: center;\r\n  }\r\n  \r\n  .files {\r\n    position: relative;\r\n  }\r\n  \r\n  .files:after {\r\n    pointer-events: none;\r\n    position: absolute;\r\n    top: 60px;\r\n    left: 0;\r\n    width: 70px;\r\n    right: 0;\r\n    height: 70px;\r\n    content: \"\";\r\n    background-image: url(https://image.flaticon.com/icons/svg/130/130993.svg);\r\n    display: block;\r\n    margin: 0 auto;\r\n    background-size: 100%;\r\n    background-repeat: no-repeat;\r\n  }\r\n  \r\n  .files:before {\r\n    content: \"Drag and drop files\";\r\n    position: absolute;\r\n    bottom: 50px;\r\n    left: 18px;\r\n    right: 0;\r\n    display: block;\r\n    font-weight: bold;\r\n    text-align: left;\r\n    font-size: 16px;\r\n    letter-spacing: 0px;\r\n    color: #3d4d60;\r\n  }\r\n  \r\n  input.form-control.file-input {\r\n    height: 90px !important;\r\n  }\r\n  span.file-type {\r\n    left: 19px;\r\n    bottom: 29px;\r\n    position: absolute;\r\n  }\r\n  span.file-type {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    letter-spacing: 0px;\r\n    color: #9bacbc;\r\n  }\r\n  span.spn-svg {\r\n    position: absolute;\r\n    right: 30px;\r\n    top: 29px;\r\n  }\r\n  .spn-svg svg {\r\n    color: #bbc7d3;\r\n  }\r\n  .text-right {\r\n    float: right;\r\n    text-align: right;\r\n    font-size: 14px;\r\n    letter-spacing: 0px;\r\n    color: #9bacbc;\r\n    opacity: 1;\r\n    line-height: 24px;\r\n  }\r\n  label {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    letter-spacing: 0px;\r\n    color: #000000;\r\n    opacity: 1;\r\n    font-weight: bold;\r\n  }\r\n  input.form-control.file-input {\r\n    opacity: 0;\r\n  }\r\n  .pb {\r\n    padding-bottom: 50px;\r\n  }\r\n  .files:hover {\r\n    background: #dde2e8;\r\n  }\r\n  .files:focus {\r\n    border: 3px solid #67aeec;\r\n    /* opacity: 0.06; */\r\n    background-color: #dce1e7;\r\n  }\r\n  .top-div {\r\n    padding-top: 50px;\r\n  }\r\n  .press {\r\n    background: #cacfd3;\r\n  }\r\n  .press:hover {\r\n    background: #cacfd3;\r\n  }\r\n  .press svg {\r\n    color: #9b9b9b !important;\r\n  }\r\n  .drdp {\r\n    background-color: #1f8eee47;\r\n    border: 2px solid #1f8eee;\r\n  }\r\n  .drdp:hover {\r\n    background-color: #1f8eee47;\r\n    border: 2px solid #1f8eee;\r\n  }\r\n  .drdp svg {\r\n    color: #1f8eee !important;\r\n  }\r\n  .alert-col {\r\n    margin-top: 20px;\r\n    padding-right: 15px;\r\n    background: transparent linear-gradient(90deg, #dcdadf 0%, #ff606048 100%) 0%\r\n      0% no-repeat padding-box;\r\n    border-radius: 4px;\r\n    opacity: 1;\r\n    text-align: left;\r\n    font-size: 16px;\r\n    letter-spacing: 0px;\r\n    color: #232e3c;\r\n    opacity: 1;\r\n    margin-bottom: 5px;\r\n  }\r\n  .btn-fclose {\r\n    float: right;\r\n  }\r\n  .file-close {\r\n    background-color: transparent;\r\n    border: 0px;\r\n  }\r\n  .file-close svg {\r\n    color: #9bacbc;\r\n  }\r\n  .file-size {\r\n    padding-right: 20px;\r\n  }\r\n  .error-msg {\r\n    text-align: left;\r\n    font-size: 16px;\r\n    letter-spacing: 0px;\r\n    color: #ff6060;\r\n    position: absolute;\r\n    top: 4rem;\r\n  }\r\n  .alert-un {\r\n    background-color: #eaeff5 !important;\r\n    border: 1px solid #eaeff5;\r\n    padding-right: 15px;\r\n    margin-top: 20px;\r\n    font-size: 16px;\r\n    letter-spacing: 0px;\r\n    color: #232e3c;\r\n  }\r\n  \r\n  /* // media queries */\r\n  \r\n  /* //iphone 5 */\r\n  @media (min-width: 320px) and (max-width: 570px) {\r\n    .alert-un {\r\n      padding-right: 0px;\r\n      font-size: 10px;\r\n    }\r\n    .file-size {\r\n      padding-right: 10px;\r\n    }\r\n  }\r\n  \r\n  // ipad pro\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    .fil-div {\r\n      display: block;\r\n      max-width: 100vh;\r\n      width: 100vh;\r\n    }\r\n  }\r\n  @media (min-width: 1025px) and (max-width: 1365px) {\r\n    .fil-div {\r\n      display: block;\r\n      max-width: 100vh;\r\n      width: 100vh;\r\n    }\r\n  }\r\n  \r\n  // Removed Bullet on list element\r\n  \r\n  .list-style li {\r\n    list-style: none;\r\n  }\r\n  .list-style {\r\n    padding-left: 0rem;\r\n  }\r\n  ",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 50
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 70
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "AppComponent-3",
            "templateData": "<div class=\"row pb\">\r\n  <div class=\"col-md-6\">\r\n    <div class=\"mb-3\">\r\n      <label for=\"formFile\" class=\"form-label\">{{label}} </label>\r\n      <input [ngClass]=\"classes\" type=\"file\" id=\"formFile\" (input)=\"getValue($event)\" [multiple]=\"multipleFiles\">\r\n  </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-bf8af0954cd3c0b9af16810ba3c95f18af32ebbaa55d17119d5ec12e1e3e026e7f9c7791058ea0f571b4d9afd89cdae83f9b818cd4a29b9eec5ebbfc3d6c80df-4",
            "file": "rds-projects/rds-floating-labels/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "'floatingInput'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Floating Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "listItems",
                    "defaultValue": "['one', 'two', 'three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'floatingInputName'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"email\" | \"text\" | \"number\" | \"password\" | \"textarea\" | \"selection\"",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'rds-floating-labels'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'rds-floating-labels';\r\n  @Input() label: string = 'Floating Label';\r\n  @Input() id: string = 'floatingInput';\r\n  @Input() name: string = 'floatingInputName';\r\n  @Input() value: string;\r\n  @Input() required: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Input() multiple: boolean = false;\r\n  @Input() placeholder: string = '';\r\n  @Input() type: 'email' | 'text' | 'number' | 'password' | 'textarea' | 'selection' = 'text';\r\n  @Input() listItems = ['one', 'two', 'three'];\r\n  onSelect(event:any){\r\n  \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "AppComponent-4",
            "templateData": "<div class=\"form-floating\">\r\n  <ng-container *ngIf=\"type==='textarea'; else selection_template\">\r\n    <textarea class=\"form-control\" [value]=\"value\" [id]=\"id\" [name]=\"name\"></textarea>\r\n  </ng-container>\r\n  <ng-template #selection_template>\r\n    <ng-container *ngIf=\"type==='selection';else other_template\">\r\n      <select class=\"form-select\" [id]=\"id\" [name]=\"name\" (change)=\"onSelect($event)\"  [disabled]=\"disabled\" [multiple]=\"multiple\"  aria-label=\"Floating label select example\"\r\n        [required]=\"required\">\r\n        <ng-container *ngFor=\"let item of listItems\"  [ngTemplateOutlet]=\"DropdownItems\" [ngTemplateOutletContext]=\"{ $implicit: item}\"></ng-container>\r\n        <ng-template #DropdownItems  let-val>\r\n          <option >{{val}}</option>\r\n          </ng-template>\r\n      </select>\r\n    </ng-container>\r\n    <ng-template #other_template>\r\n      <input [type]=\"type\" class=\"form-control\" [id]=\"id\" [name]=\"name\" [value]=\"value\" [required]=\"required\">\r\n    </ng-template>\r\n  </ng-template>\r\n\r\n  <label [for]=\"id\">{{label}}</label>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6ee554ed5e31930f484cf7c1720f1f595bd72dee2939fae3a2855ab46b52d17f95fdd4a578198986dd416abb0d743fc4e7e0c7429a5705028c80f70cd3131499-5",
            "file": "rds-projects/rds-list-group/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundType",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\"",
                    "decorators": []
                },
                {
                    "name": "flush",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "listItem",
                    "defaultValue": "[\r\n        {\r\n          label:' label 1',\r\n          disabled:true,\r\n          badgeLabel: '10',\r\n          listHeading:'',\r\n          listContent:'',\r\n          listTime:'',\r\n        },\r\n        {\r\n          label:' label 2',\r\n          disabled:false,\r\n          badgeLabel: '2',\r\n          listHeading:'',\r\n          listContent:'',\r\n          listTime:'',\r\n        },\r\n        {\r\n          label:' label 3',\r\n          disabled:false,\r\n          badgeLabel: '5',\r\n          listHeading:'',\r\n          listContent:'',\r\n          listTime:'',\r\n        }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "listType",
                    "defaultValue": "'list'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"list\" | \"button\"",
                    "decorators": []
                },
                {
                    "name": "orderList",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'xxl'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedItem",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "title",
                    "defaultValue": "'rds-list-group'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "listClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'rds-list-group';\r\n   @Input() flush = false;\r\n  @Input() listType: 'list' | 'button' = 'list';\r\n  @Input() orderList = false;\r\n  @Input() backgroundType: 'primary'| 'secondary'| 'success' | 'danger'| 'warning' | 'info'| 'light' | 'dark' = 'primary';\r\n  @Input() type: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' = 'xxl';\r\n\r\n  @Output() onClick = new EventEmitter<Event>();\r\n\r\n  @Input()\r\n  list!: TemplateRef<any>;\r\n  @Input() listItem =[\r\n        {\r\n          label:' label 1',\r\n          disabled:true,\r\n          badgeLabel: '10',\r\n          listHeading:'',\r\n          listContent:'',\r\n          listTime:'',\r\n        },\r\n        {\r\n          label:' label 2',\r\n          disabled:false,\r\n          badgeLabel: '2',\r\n          listHeading:'',\r\n          listContent:'',\r\n          listTime:'',\r\n        },\r\n        {\r\n          label:' label 3',\r\n          disabled:false,\r\n          badgeLabel: '5',\r\n          listHeading:'',\r\n          listContent:'',\r\n          listTime:'',\r\n        }\r\n  ];\r\n\r\n  selectedItem=1;\r\n\r\n\r\n\r\n  public get classes(): string[] {\r\n\r\n    var listClasses= ['list-group']\r\n    if(this.flush === true){\r\n      listClasses.push('list-group-flush')\r\n    }\r\n    if(this.orderList === true){\r\n      listClasses.push('list-group-numbered')\r\n    }\r\n\r\n\r\n    return listClasses\r\n \r\n  }\r\n\r\n\r\n  listClick(event:any) {\r\n    \r\n    console.log(event)\r\n    this.selectedItem = event\r\n   \r\n}\r\npublic get listItemClass(): string[] {\r\n\r\n  var list= ['list-group-item']\r\n\r\n\r\n  return list\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".list-group-item{\r\n    cursor:pointer;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                },
                "listItemClass": {
                    "name": "listItemClass",
                    "getSignature": {
                        "name": "listItemClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 73
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 5,
            "duplicateName": "AppComponent-5",
            "templateData": "<ul  [ngClass]=\"classes\">\r\n  <ng-container  *ngFor=\"let item of listItem\">\r\n    <ng-container  [ngTemplateOutlet]=\"list\"  [ngTemplateOutletContext]=\"{ $implicit: item}\"></ng-container>\r\n  </ng-container>\r\n</ul>\r\n<ng-template #list  let-item>  \r\n  <li class=\"list-group-item\" >\r\n  {{item.label}}</li>\r\n  </ng-template>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-15c2131c0930018b3263d8597fae5f984e95ab849edf5f00276f5b935c2c71568c0bbf4f10e796093a57ed3e0443655cbcc6beadba8d8a0b4fb094d1d48c9ec1-6",
            "file": "rds-projects/rds-radio-buttons/src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: AppComponent, multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'Name for checkbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "switch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers:[{\r\n    provide:NG_VALUE_ACCESSOR,\r\n    useExisting:AppComponent,\r\n    multi:true\r\n  }]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  value=''\r\n\r\n  onChange!:(value:string) => void;\r\n  onTouched!:() => void\r\n\r\n  @Input()\r\n  name = 'Name for checkbox'\r\n\r\n  @Input()\r\n  label?:string\r\n\r\n  @Input()\r\n  checked = false\r\n  @Input()\r\n  disabled=false\r\n\r\n  @Input()\r\n  id?:string\r\n  \r\n   @Input()\r\n  switch= false\r\n\r\n  @Input()\r\n  inline= false\r\n\r\n  @Output()\r\n   onClick = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n  writeValue(obj: any): void {\r\n    this.value = obj\r\n    //throw new Error('Method not implemented.');\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn\r\n    //throw new Error('Method not implemented.');\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn\r\n    //throw new Error('Method not implemented.');\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  public get classes():string[]{\r\n    var classes = ['form-check']\r\n    if(this.switch === true){\r\n      classes.push('form-switch')\r\n      return classes\r\n    }\r\n    if(this.inline === true){\r\n      classes.push('form-check-inline')\r\n      return classes\r\n    }\r\n    return classes\r\n  }\r\n\r\n\r\n  getValue(event:any){\r\n    this.onClick.emit({evnt:event,item:event.target.value});\r\n    this.onChange(event.target.value)\r\n      this.onTouched()\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dark-mode{\r\n    background-color: #232933;\r\n}\r\n.light-mode .form-check{\r\n    padding: 40px 0px 40px 40px;\r\n    border-bottom: 1px solid ;\r\n}\r\n.light-mode .form-check:nth-child(5){\r\n    border-bottom: 0px solid ;\r\n}\r\n.dark-mode .form-check:nth-child(5){\r\n    border-bottom: 0px solid ;\r\n}\r\n.dark-mode .form-check{\r\n    padding: 40px 0px 40px 40px;\r\n    border-bottom: 1px solid white;\r\n}\r\nh6{\r\n    padding-bottom: 20px;\r\n}\r\ninput[type=flexCheckIndeterminate]:indeterminate::before {\r\n    content: \"-\";\r\n    display: block;\r\n    color: white;\r\n    width: 17px;\r\n    height: 17px;\r\n    background-color:#3B99FC;\r\n}\r\n.inder .form-check-input[type=checkbox] {\r\n    background-color: #0d6efd;\r\n    border-color: #0d6efd;\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e\");\r\n}\r\nlabel.form-check-label {\r\n    font-size: 16px;\r\n    letter-spacing: 0px;\r\n    color: #343B46;\r\n}\r\n.col-md-6.light-mode {\r\n    padding-right: 60px;\r\n}\r\n.form-check-input:focus {\r\n    box-shadow: 0 0 0 0rem rgb(13 110 253 / 25%);\r\n    border: 1pxsolid #1F8EEE;\r\n    border-radius: 4px;\r\n}\r\n.errorche label.form-check-label {\r\n    color: #FF6060 !important;\r\n}\r\n.errorche .form-check-input:checked {\r\n    background-color: #FF6060;\r\n    border-color: #FF6060;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 42
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 59
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 6,
            "duplicateName": "AppComponent-6",
            "templateData": "<div [ngClass]=\"classes\">\r\n  <input type=\"radio\"  class=\"form-check-input\"  [name]=\"name\" [value]=\"label\"  [checked]=\"checked\" [id]=\"id\"\r\n  [disabled]=\"disabled\" (input)=\"getValue($event)\">\r\n  <label class=\"form-check-label\" [for]=\"id\">\r\n      {{label}}\r\n  </label> \r\n</div>\r\n\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-407f3629a8f41850f6ac5535095dd8eabd940361e41e079708c42c03fd4ad591e2ad1f5f13453461c4efa3b805e66eb70e99cc19aa122032444f0a1840d93aa1-7",
            "file": "rds-projects/rds-search-input/src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'bi bi-search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Placeholder",
                    "defaultValue": "'New'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'form-control-sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  @Input()\r\n  Placeholder ='New'\r\n\r\n  @Input()\r\n  icon ='bi bi-search'\r\n\r\n  @Input()\r\n  size ='form-control-sm'\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n\r\n.search {\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n  }\r\n  \r\n  .searchTerm {\r\n      width: 100%;\r\n      border-right: none;\r\n      padding: 25px;\r\n      height: 55px;\r\n      border-radius: 5px;\r\n      outline: none;\r\n      color: #9BACBC;\r\n      background-color: #F4F7F9;\r\n      border: 0px;\r\n      font-size: 18px;\r\n  }\r\n  \r\n  .searchTerm:focus{\r\n    color: #9BACBC;\r\n  }\r\n  \r\n  .searchButton {\r\n    width: 40px;\r\n    height: 55px;           \r\n    text-align: center;\r\n    color: #9BACBC;\r\n    border-radius: 0 5px 5px 0;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    border: 0px;\r\n    background-color: #F4F7F9;\r\n    padding-right: 40px;\r\n  \r\n  }\r\n  \r\n  /*Resize the wrap to see the search bar change!*/\r\n  .wrap{\r\n    width: 30%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  h6{\r\n      padding-top: 30px;\r\n      padding-bottom: 50px;\r\n  }\r\n  .light-mode{\r\n      padding-bottom: 50px;\r\n  }\r\n  \r\n  \r\n  /* dark mode */\r\n  .dark-mode{\r\n      margin-top: 50px;\r\n  }\r\n  .dark-mode {\r\n      background-color: #232933;\r\n      padding-bottom: 50px;\r\n      padding-top: 50px;\r\n  }\r\n  .dark-mode h6{\r\n      color: #fff;\r\n  }\r\n  .dark-mode .searchTerm{\r\n      color: #9BACBC;\r\n      background-color: #323B47;\r\n      border-radius: 5px 0px 0px 5px;\r\n  }\r\n  .dark-mode .searchButton {\r\n      color: #9BACBC;\r\n      background-color: #323B47;\r\n    \r\n    }\r\n    ",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 7,
            "duplicateName": "AppComponent-7",
            "templateData": "<div class=\"container search\">\r\n  <input type=\"text\" class=\"searchTerm\"  placeholder=\"{{Placeholder}}\">\r\n  <button type=\"submit\" class=\"searchButton\">\r\n   <i [class]=\"icon\"></i>\r\n </button>\r\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f071c5198db73aff3eed6bd1b3eb2d2907f764778263a504460c215e873f1c1f2ddf9fd2dfade50bab086cb3f14d199fb533ea629f46f847bb066fab8f2de1c1-8",
            "file": "rds-projects/rds-table/src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tableItems",
                    "defaultValue": "[{ name: \"xyz\", age: 25, state: \"Maharashtra\" }, { name: \"yz\", age: 21, state: \"Hariyana\" }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tbody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "thead",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'rds-table'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'rds-table';\r\n\r\n  @Input()\r\n  hover = false\r\n\r\n  @Input()\r\n  tableItems: any = [{ name: \"xyz\", age: 25, state: \"Maharashtra\" }, { name: \"yz\", age: 21, state: \"Hariyana\" }]\r\n\r\n  @Input()\r\n  thead!: TemplateRef<any>;\r\n\r\n  @Input()\r\n  tbody!: TemplateRef<any>\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  public get class(): string {\r\n    var hover = ''\r\n    if (this.hover === true) {\r\n\r\n      hover = 'table-hover'\r\n    }\r\n    return hover\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#table {\r\n  thead {\r\n    background: var(--unnamed-color-5c82e3) 0% 0% no-repeat padding-box;\r\n    background: #5C82E3 0% 0% no-repeat padding-box;\r\n    opacity: 1;\r\n  }\r\n\r\n  thead th {\r\n    text-align: left;\r\n    font-size: 12px;\r\n    letter-spacing: 0px;\r\n    color: #EBF0FF;\r\n    text-transform: capitalize;\r\n    opacity: 1;\r\n    padding: 12px;\r\n  }\r\n\r\n  thead th:first-child {\r\n    border-right: 5px solid white;\r\n  }\r\n\r\n  .borders {\r\n    border-right: 1px solid #dee2e6;\r\n    padding: 20px;\r\n  }\r\n\r\n  svg {\r\n    float: right;\r\n  }\r\n\r\n  td {\r\n    padding: 14px;\r\n  }\r\n\r\n  tbody {\r\n    text-align: left;\r\n    font-size: 14px;\r\n    letter-spacing: 0px;\r\n    color: #424A50;\r\n    text-transform: capitalize;\r\n    opacity: 1;\r\n    font-weight: normal;\r\n  }\r\n\r\n  th.borders {\r\n    font-weight: normal;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .table-hover > tbody > tr:hover {\r\n    --bs-table-accent-bg: #EBF0FF;\r\n    color: var(--bs-table-hover-color);\r\n  }\r\n\r\n  .sectble {\r\n    padding-top: 30px;\r\n  }\r\n\r\n  .tbl-dark {\r\n    background-color: #242F3D;\r\n    padding: 30px 30px;\r\n  }\r\n\r\n  .tbl-dark .borderh {\r\n    border-right: 5px solid #242F3D;\r\n  }\r\n\r\n  .tbl-dark tbody tr {\r\n    border-color: grey;\r\n    color: #EBF0FF;\r\n  }\r\n\r\n  .tbl-dark .borders {\r\n    border-right: 1px solid grey;\r\n    padding: 20px;\r\n  }\r\n\r\n  .table > :not(:last-child) > :last-child > * {\r\n    border-bottom-color: transparent;\r\n  }\r\n\r\n  .tbl-dark tbody {\r\n    color: #EBF0FF;\r\n  }\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "string",
                        "returnType": "string",
                        "line": 32
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 8,
            "duplicateName": "AppComponent-8",
            "templateData": "<table class=\"table\" [ngClass]=\"class\" id=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <ng-container [ngTemplateOutlet]=\"thead\"></ng-container>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <ng-container *ngFor=\"let items of tableItems\">\r\n      <ng-container [ngTemplateOutlet]=\"tbody\" [ngTemplateOutletContext]=\"{ $implicit: items}\"></ng-container>\r\n    </ng-container>\r\n  </tbody>\r\n</table>\r\n\r\n  <ng-template #thead>\r\n    <th>Name</th>\r\n    <th>Age</th>\r\n    <th>State</th>\r\n\r\n  </ng-template>\r\n  <ng-template #tbody let-val>\r\n    <tr>\r\n      <td>{{val.name}}</td>\r\n      <td>{{val.age}}</td>    \r\n      <td>{{val.state}}</td>        \r\n    </tr>\r\n  </ng-template>\r\n\r\n\r\n  `   \r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-09265b6dcbe0f1bd04c1a5cd736cf0117f9fd84a36293867a58c21a2319cfe4164d8b2747bf91095ce73bf45ffd0c9b413375f77cd3359889dd782c05e753889-9",
            "file": "rds-projects/rds-select-list/src/app/app.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: AppComponent, multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "DropdownItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "floatinginputLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "listItems",
                    "defaultValue": "[{value:'India',some:'value'},{value:'USA'},{value:'Canada'}]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectSize",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showSizeAttribute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "floatingcontent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers:[{\r\n    provide:NG_VALUE_ACCESSOR,\r\n    useExisting: AppComponent,\r\n    multi:true\r\n  }]\r\n})\r\nexport class AppComponent implements OnInit,ControlValueAccessor {\r\n\r\n  selectedValue = ''\r\n  onChange!:(value:string) => void;\r\n  onTouched!:()=> void\r\n  @Input()\r\n  size:string=''\r\n\r\n  @Input()\r\n  selectSize:string='';\r\n\r\n  @Input()\r\n  DropdownItems!:TemplateRef<any>\r\n\r\n  @Input()\r\n  showSizeAttribute?:boolean\r\n\r\n  @Input()\r\n  disabled?:boolean=false;\r\n\r\n  @Input()\r\n  multiple?:boolean=false;\r\n\r\n  @Input()\r\n  customIcon='';\r\n // @Input()\r\n // floatinglabel=false\r\n\r\n  @Input()\r\n  floatinginputLabel?: string\r\n\r\n  @Input()\r\n  placeholderText?: string\r\n  \r\n  floatingcontent =false;\r\n\r\n  @Input()\r\n  listItems=[{value:'India',some:'value'},{value:'USA'},{value:'Canada'}];\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  constructor() { }\r\n  writeValue(obj: any): void {\r\n    this.selectedValue = obj;\r\n\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n     this.onTouched = fn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public get ClassesForShowSelect():string{\r\n     var show = this.showSizeAttribute ?  '': 'd-none'\r\n     return show\r\n  }\r\n\r\n  public get classesForSelect():string[]{\r\n    var selectTagClasses =['form-select']\r\n    if(this.size === 'small'){\r\n      var selectSize = 'form-select-sm'\r\n      selectTagClasses.push(selectSize)\r\n    }\r\n    else if(this.size === 'large'){\r\n      var selectSize = 'form-select-lg'\r\n      selectTagClasses.push(selectSize)\r\n    }\r\n    else\r\n    {\r\n      var selectSize = 'default'\r\n      selectTagClasses.push(selectSize)\r\n    }\r\n\r\n    return selectTagClasses\r\n  }\r\n\r\n  public get bootstrapIcon():string{\r\n    var icon = this.customIcon\r\n    return icon\r\n  }\r\n\r\n  public get icon():string[]{\r\n    var classList =[''];\r\n    \r\n    if(this.floatinginputLabel){\r\n      classList.push('form-floating')\r\n      this.floatingcontent=true;\r\n     }else{\r\n      this.floatingcontent=false;\r\n     }\r\n    if(this.customIcon === ''){\r\n      \r\n      return classList\r\n    }\r\n    else{\r\n      classList.push('icon')\r\n      return classList\r\n    }\r\n\r\n  }\r\n  public get iconPosition():string{\r\n    if(this.customIcon === ''){\r\n      return ''\r\n    }\r\n    else{\r\n      return 'icon-position'\r\n    }\r\n  }\r\n\r\n  onSelect(event:any){\r\n    this.onChange(event.target.value)\r\n    this.onTouched()\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 54
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "ClassesForShowSelect": {
                    "name": "ClassesForShowSelect",
                    "getSignature": {
                        "name": "ClassesForShowSelect",
                        "type": "string",
                        "returnType": "string",
                        "line": 73
                    }
                },
                "classesForSelect": {
                    "name": "classesForSelect",
                    "getSignature": {
                        "name": "classesForSelect",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 78
                    }
                },
                "bootstrapIcon": {
                    "name": "bootstrapIcon",
                    "getSignature": {
                        "name": "bootstrapIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 97
                    }
                },
                "icon": {
                    "name": "icon",
                    "getSignature": {
                        "name": "icon",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 102
                    }
                },
                "iconPosition": {
                    "name": "iconPosition",
                    "getSignature": {
                        "name": "iconPosition",
                        "type": "string",
                        "returnType": "string",
                        "line": 121
                    }
                }
            },
            "isDuplicate": true,
            "duplicateId": 9,
            "duplicateName": "AppComponent-9",
            "templateData": "<div [ngClass]=\"icon\">\r\n  <select\r\n    id=\"select\"\r\n    [ngClass]=\"classesForSelect\"\r\n    aria-label=\"Default select example\"\r\n    [disabled]=\"disabled\"\r\n    [multiple]=\"multiple\"\r\n    (change)=\"onSelect($event)\"\r\n  >\r\n    <ng-container\r\n      *ngFor=\"let item of listItems\"\r\n      [ngTemplateOutlet]=\"DropdownItems\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: item }\"\r\n    ></ng-container>\r\n  </select>\r\n  <span [ngClass]=\"iconPosition\">\r\n    <i [ngClass]=\"bootstrapIcon\"></i>\r\n  </span>\r\n  <label *ngIf=\"floatingcontent\" for=\"floatingInput\">{{\r\n    floatinginputLabel\r\n  }}</label>\r\n</div>\r\n\r\n<ng-template #DropdownItems let-val>\r\n  <option>{{ val.value }}</option>\r\n</ng-template>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0076d692cd61775cc43ba96bd6493a9d25a87381f07c45b3cfc73b06fe7985d6173e0c4386d45bd7050f3905efb5b2b68fc14f334d187842259966f1f6f9c314-10",
            "file": "rds-projects/rds-tooltip/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"top\" | \"bottom\" | \"right\" | \"left\"",
                    "decorators": []
                },
                {
                    "name": "tooltipTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, Input, Renderer2 } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n // title = 'rds-tooltip';\r\n constructor(\r\n  // tslint:disable-next-line:variable-name\r\n  private _renderer2: Renderer2,\r\n  // tslint:disable-next-line:variable-name\r\n  @Inject(DOCUMENT) private _document: Document\r\n\r\n) { }\r\n\r\n@Input()\r\ntooltipTitle =  '';\r\n@Input()\r\ntooltipPosition: 'top' | 'bottom' | 'right' | 'left' = 'bottom';\r\nngOnInit(): void {\r\n}\r\n\r\nngAfterViewInit(): void {\r\n  // tslint:disable-next-line:prefer-const\r\n  let script = this._renderer2.createElement('script');\r\n  script.text = `\r\n              var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\r\n              var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n                return new bootstrap.Tooltip(tooltipTriggerEl)\r\n              })\r\n              `;\r\n  this._renderer2.appendChild(this._document.body, script);\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_renderer2",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 10,
            "duplicateName": "AppComponent-10",
            "templateData": "<div data-bs-toggle=\"tooltip\" [attr.data-bs-placement]=\"tooltipPosition\" [title]=\"tooltipTitle\">\r\n  <ng-content></ng-content>  \r\n</div>"
        },
        {
            "name": "RdsButtonGroupComponent",
            "id": "component-RdsButtonGroupComponent-1030c2cd697ca086d4691eb99a21c25d3ffde39959b0c7cc5e7b5b6e785b252bdd307457f5dc0b94465ad15f2ac2ea6291364a76beac25f4b1a220150ec698ab",
            "file": "rds-projects/rds-button-group/src/app/rdsButtonGroup.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rds-buuton-group",
            "styleUrls": [
                "./rdsButtonGroup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./rdsButtonGroup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonGroupItem",
                    "defaultValue": "[\n\n      {\n        label: 'Left',\n        iconClass: '',\n        id: '',\n        name: '',\n       },\n       {\n        label: 'middle',\n        iconClass: '',\n        id: '',\n        name: '',\n       },\n       {\n        label: 'right',\n        iconClass: '',\n        id: '',\n        name: '',\n       },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 38,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "role",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"button\" | \"radio\" | \"checkbox\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"small\" | \"large\" | \"medium\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"primary\" | \"secondary\" | \"danger\" | \"success\" | \"warning\" | \"info\" | \"light\" | \"dark\"",
                    "decorators": []
                },
                {
                    "name": "vertical",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'rds-buuton-group',\n  templateUrl: './rdsButtonGroup.component.html',\n  styleUrls: ['./rdsButtonGroup.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RdsButtonGroupComponent {\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n  @Input()\n  borderColor?: string;\n  @Input()\n  color?: string;\n\n  @Input()\n  vertical =  false;\n\n  @Input()\n  type: 'primary' | 'secondary' | 'danger' | 'success' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\n\n  @Input()\n  outline =  false;\n\n  @Input()\n  role: 'button' | 'radio' | 'checkbox' = 'button';\n\n  @Input()\n  size: 'small' | 'large' | 'medium' = 'medium';\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  buttonGroupItem:any[]= [\n\n      {\n        label: 'Left',\n        iconClass: '',\n        id: '',\n        name: '',\n       },\n       {\n        label: 'middle',\n        iconClass: '',\n        id: '',\n        name: '',\n       },\n       {\n        label: 'right',\n        iconClass: '',\n        id: '',\n        name: '',\n       },\n  ];\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onClick = new EventEmitter<any>();\n\n  public get classes(): string {\n    const mode = `${this.vertical ? 'btn-group-vertical' : 'btn-group'}`;\n    const mode2 = ` btn-group-${this.size === 'small' ? 'sm' : this.size === 'large' ? 'lg' : 'md'}`;\n    return mode + mode2;\n  }\n  public get itemClass(): string {\n    const mode = `${this.outline ? 'btn btn-outline-' + this.type : 'btn btn-' + this.type}`;\n    return mode;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n/*  Raaghu Theme - CSS */\r\n.btn {\r\n    font-weight: 500;\r\n    border-radius: 8px;\r\n    text-transform: uppercase;\r\n  }\r\n  .btn-group-sm > .btn, .btn-sm {\r\n    border-radius:8px;\r\n  }\r\n  .btn-group-lg > .btn, .btn-lg {\r\n    border-radius: 8px;\r\n  }\r\n  /*  Disable state */\r\n  .btn.disabled, fieldset:disabled .btn {\r\n    pointer-events: none;\r\n    opacity: 32%;\r\n  }\r\n  \r\n  /*  btn-primary */\r\n  .btn-primary {\r\n    background-color: #4EA1FF;\r\n    border: 2px solid #4EA1FF;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #458EE0;\r\n    border: 2px solid #458EE0;\r\n  }\r\n  \r\n  .btn-outline-primary {\r\n    color: #4EA1FF !important;\r\n    background-color: #fff;\r\n    border: 2px solid #4EA1FF;\r\n  }\r\n  \r\n  .btn-outline-primary:hover {\r\n    color: #4EA1FF;\r\n    background-color: rgb(78 161 255 / 10%);\r\n    border: 2px solid #4EA1FF;\r\n  }\r\n  \r\n  /*  btn-secondary  */\r\n  .btn-secondary {\r\n    background-color: #5C82E3;\r\n    border: 2px solid #5C82E3;\r\n  }\r\n  \r\n  .btn-secondary:hover {\r\n    background-color: #5172C8;\r\n    border: 2px solid #5172C8;\r\n  }\r\n  \r\n  .btn-outline-secondary {\r\n    color: #5C82E3 !important;\r\n    background-color: #fff;\r\n    border: 2px solid #5C82E3;\r\n  }\r\n  \r\n  .btn-outline-secondary:hover {\r\n    color: #5C82E3;\r\n    background-color: rgb(92 130 227 / 10%);\r\n    border: 2px solid #5C82E3;\r\n  }\r\n  \r\n  \r\n  /*  btn-danger  */\r\n  .btn-danger {\r\n    background-color: #EA2745;\r\n    border: 2px solid #EA2745;\r\n  }\r\n  /*  btn-danger  */\r\n  .btn-danger:hover {\r\n    background-color: #BE3642;\r\n    border: 2px solid #BE3642;\r\n  }\r\n  \r\n  .btn-outline-danger {\r\n    color: #EA2745 !important;\r\n    background-color: #fff;\r\n    border: 2px solid #EA2745;\r\n  }\r\n  \r\n  .btn-outline-danger:hover {\r\n    color: #BE3642;\r\n    background-color: rgb(234 39 69 / 10%);\r\n    border: 2px solid #BE3642;\r\n  }\r\n  \r\n  /*  btn-success  */\r\n  .btn-success {\r\n    background-color: #01AE9D;\r\n    border: 2px solid #01AE9D;\r\n  }\r\n  /*  btn-success  */\r\n  .btn-success:hover {\r\n    background-color: #008578;\r\n    border: 2px solid #008578 #008578;\r\n  }\r\n  \r\n  .btn-outline-success {\r\n    color: #01AE9D !important;\r\n    background-color: #fff;\r\n    border: 2px solid #01AE9D;\r\n  }\r\n  \r\n  .btn-outline-success:hover {\r\n    color: #008578;\r\n    background-color: rgb(37 136 128 / 10%);\r\n    border: 2px solid #008578;\r\n  }\r\n  \r\n  \r\n  \r\n  /*  btn-warning  */\r\n  .btn-warning {\r\n    color: #fff !important;\r\n    background-color: #F58220;\r\n    border: 2px solid #F58220;\r\n  }\r\n  \r\n  .btn-warning:hover {\r\n    background-color: #E06700;\r\n    border: 2px solid #E06700;\r\n  }\r\n  \r\n  .btn-outline-warning {\r\n    color: #F58220 !important;\r\n    background-color: #fff;\r\n    border: 2px solid #F58220;\r\n  }\r\n  \r\n  .btn-outline-warning:hover {\r\n    color: #E06700;\r\n    background-color: rgb(224 111 22 / 10%);\r\n    border: 2px solid #E06700;\r\n  }\r\n  \r\n  /*  btn-info  */\r\n  .btn-info {\r\n    background-color: #58C2FF;\r\n    border: 2px solid #58C2FF;\r\n  }\r\n  \r\n  .btn-info:hover {\r\n    background-color: #2C9CDD;\r\n    border: 2px solid #2C9CDD;\r\n  }\r\n  \r\n  .btn-outline-info {\r\n    color: #58C2FF !important;\r\n    background-color: #fff;\r\n    border: 2px solid #58C2FF;\r\n  }\r\n  \r\n  .btn-outline-info:hover {\r\n    color: #2C9CDD;\r\n    background-color: rgb(44 156 221 / 10%);\r\n    border: 2px solid #2C9CDD;\r\n  }\r\n  /* dark */\r\n  .btn-outline-dark {\r\n    color: #050404 !important;\r\n    background-color: #fff;\r\n    border: 2px solid #050404;\r\n  }\r\n  \r\n  .btn-outline-dark:hover {\r\n    color: #050404;\r\n    background-color: rgb(5 4 4 / 10%);\r\n    border: 2px solid #050404;\r\n  }\r\n  \r\n  /*btn-link*/\r\n  .btn-link {\r\n    color: #0d6efd;\r\n    text-decoration: underline;\r\n    background: transparent !important;\r\n    border: none;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .btn-icon.btn-sm {\r\n    padding: 6px 8px;\r\n  }\r\n  \r\n  .btn-icon.btn-md {\r\n    padding: 8px 10px;\r\n  }\r\n  \r\n  .btn-icon.btn-lg {\r\n    padding: 10px 12px;\r\n  }\r\n  \r\n  .btn-icon {\r\n    border-radius: 50%;\r\n    color: #fff;\r\n  }\r\n  \r\n  .btn-icon svg {\r\n    vertical-align: middle;\r\n  }",
                    "styleUrl": "./rdsButtonGroup.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 63
                    }
                },
                "itemClass": {
                    "name": "itemClass",
                    "getSignature": {
                        "name": "itemClass",
                        "type": "string",
                        "returnType": "string",
                        "line": 68
                    }
                }
            },
            "templateData": "\n<div [ngSwitch]=\"role\">\n  <div *ngSwitchCase=\"'radio'\">\n    <div [class]=\"classes\" role=\"group\" aria-label=\"Basic example\">\n      <!-- <span *ngFor=\" let item of buttonGroupItem;let i=index\"> -->\n     \n      <!-- </span> -->\n      <ng-container *ngFor=\"let item of buttonGroupItem;let i=index\">\n        <input type=\"radio\" class=\"btn-check\" [name]=\"item.name\" [id]=\"item.id\" autocomplete=\"off\" (click) = \"onClick.emit(item)\">\n        <label [class]=\"itemClass\" [for]=\"item.id\"\n        [ngStyle]=\"{'border-color': borderColor , 'background-color':backgroundColor , 'color':color}\">\n          <i [class]=\"item.iconClass\"></i> \n          {{item.label}}\n        </label>\n      </ng-container>\n    </div>\n  </div>\n  <div *ngSwitchCase=\"'checkbox'\">\n    <div [class]=\"classes\" role=\"group\" aria-label=\"Basic example\">\n      <ng-container *ngFor=\"let item of buttonGroupItem;let i=index\">\n        <input type=\"checkbox\" class=\"btn-check\" [id]=\"item.id\" autocomplete=\"off\" (click) = \"onClick.emit(item)\">\n        <label [class]=\"itemClass\" [for]=\"item.id\"\n        [ngStyle]=\"{'border-color': borderColor , 'background-color':backgroundColor , 'color':color}\">\n          <i [class]=\"item.iconClass\"></i> \n          {{item.label}}\n        </label>\n      </ng-container>\n    </div>\n  </div>\n  <div *ngSwitchDefault>\n    <div [class]=\"classes\" role=\"group\" aria-label=\"Basic example\">\n      <button type=\"button\" *ngFor=\" let item of buttonGroupItem;let i=index\" [class]=\"itemClass\"\n        [ngStyle]=\"{'border-color': borderColor , 'background-color':backgroundColor , 'color':color}\"\n        (click)=\"onClick.emit(i+1)\">\n\n        <i [class]=\"item.iconClass\"></i> {{item.label}}</button>\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n "
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-f261603305c5a60974b5023571f05a44efeeff13c73b3f4268619cf5d2958be7345a4671a3d2e7687e123364a9b1553a29963ee8502f31a6da2e360f04157307",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-button/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-button', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-f59ee6df3fcedcdbc1de37b6bcd6e43d4cf485abab5ca5f879164beeb6350f110b37eda6f5c5943e0f598fbecfb4b2341ed6488341374294f2fa0d1bac588046-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-carousel/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-carousel', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-bad64623130114f0d80e6e082dd638308a20542044f4ff14c80194f52d0d9a473c7e4fc6533b6fe6379b0c12385b947f7307e6d2ec63047d0b774d7ebdb6308c-2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-button-group/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RdsButtonGroupComponent } from './rdsButtonGroup.component';\nimport { environment } from '../environments/environment.prod';\nimport { createCustomElement } from '@angular/elements';\n\n@NgModule({\n  declarations: [RdsButtonGroupComponent],\n  imports: [BrowserModule, AppRoutingModule],\n  providers: [],\n  entryComponents: [RdsButtonGroupComponent],\n  bootstrap: [environment.localDev ? RdsButtonGroupComponent : []],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private injector: Injector) {\n    const micro = createCustomElement(RdsButtonGroupComponent, {\n      injector: this.injector,\n    });\n    customElements.define('rds-button-group', micro);\n  }\n\n  ngDoBootstrap(appRef: ApplicationRef): void {\n  }\n}\n\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RdsButtonGroupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-fb9e7ba265328363e69963220becbf5173091e2e4c9da5789859a8fde8cc9233030c0f5bb1d06a1a4f62f966551c62c19c0a7963e2a646fa18fa486df062133d-3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-color-picker/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { environment } from '../environments/environment.prod';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-color-picker', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-636edb8b9471394ee8980ca557440856f9ca40fff26b2fc24f15eb5a1361a8904e720e62bc257d30abecd7be69ffc2cd4e3bf8d378917a435b20adffa60f6f29-4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-file-uploader/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-file-uploader', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-f25ac2a56db3ff00dfae5cfce155559d4d775f6aa455ba141a4d198474531744af4104994884a3adeefb6b1146e73c506a6ca78792adce5981b87c56fb8975d9-5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-floating-labels/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { environment } from '../environments/environment.prod';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [environment.localDev ? AppComponent : []]\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-floating-labels', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-f1fce6f77889ac1e130bb382a6309bb5a97cb386f3dca8c3ceadf1ba39afbbdfbea2f0ce887587f95e46eeba69971fa5adf2365eab59da049489737d7b2bac17-6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-list-group/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [environment.localDev ? AppComponent : []]\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-list-group', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-322004cfa82057c9f83ef44c197eec2f5181ed41921723dc7967ba7fd3b8b50e223937ae8da4056f5e3dcffbc3c3509f92fc8262a3d283a1e1b7f73d5611eddd-7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-radio-buttons/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-radio-buttons', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-fa2e92cd6e32dfd67536a5d73266cb25803a0831603312ac0b2026d0c8175ad4a2e88c67629faa4ffe05ab26d0b6b67b53620c90850ce49ca06feb6cf33d9257-8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-search-input/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-search-input', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-1c549353c6263a8792a6dcd767909e625df7c8f99be70b5c43042e0fc65a811070ca5c4f074f7c365851119ed47d3d745cd6b7ec30b6c6b719b68cac3a608b9a-9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-table/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-table', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-f0baaa7922d26a083e2be149731ba10f40d562da35413e031d3ff67dc8e1da252066fa1aec462386d42643cb2a0a5c082e8227aa80e62ba79407500d38a36d11-10",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-select-list/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []],\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-select-list', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-5bae2cf0da28b29bce535d091bb9266ef7ac9316ff13a3cfdcf7b62cded4c25bb21e98a9acd81c91e1931ab414f2f97230d0f7c1bd127bc68e9b08674c8284af-11",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-tooltip/src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ApplicationRef, DoBootstrap, Injector, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from 'rds-projects/rds-button/src/environments/environment';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  entryComponents: [AppComponent],\r\n  bootstrap: [environment.localDev ? AppComponent : []]\r\n})\r\n\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const micro = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('rds-tooltip', micro);\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-button/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-carousel/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15-2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-button-group/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-color-picker/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-file-uploader/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-floating-labels/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-list-group/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-radio-buttons/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-search-input/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-table/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-10",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-select-list/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b-11",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "rds-projects/rds-tooltip/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CheckboxButtonGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-carousel/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-color-picker/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-file-uploader/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-floating-labels/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-list-group/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-radio-buttons/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-search-input/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-table/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-select-list/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-tooltip/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-carousel/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-carousel/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  localDev: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-color-picker/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev:false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-color-picker/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-file-uploader/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-file-uploader/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-floating-labels/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-floating-labels/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-list-group/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  localDev:true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-list-group/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev:true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-radio-buttons/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-radio-buttons/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-search-input/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-search-input/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-table/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev:true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-table/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-select-list/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-select-list/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-tooltip/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  localDev:false\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-tooltip/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  localDev:true\r\n}"
            },
            {
                "name": "horizontal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconButtonGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RadioButtonGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-carousel/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-color-picker/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-file-uploader/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-floating-labels/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-list-group/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-radio-buttons/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-search-input/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-table/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-select-list/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-tooltip/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Sec",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AppComponent>",
                "defaultValue": "(args: AppComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RdsButtonGroupComponent>",
                "defaultValue": "(args: RdsButtonGroupComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts": [
                {
                    "name": "CheckboxButtonGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "horizontal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "IconButtonGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RadioButtonGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RdsButtonGroupComponent>",
                    "defaultValue": "(args: RdsButtonGroupComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "rds-projects/rds-button/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-carousel/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-carousel/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-carousel/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-button-group/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-color-picker/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-color-picker/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-color-picker/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-file-uploader/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-file-uploader/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-file-uploader/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-floating-labels/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-floating-labels/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-floating-labels/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-list-group/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-list-group/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-list-group/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-radio-buttons/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-radio-buttons/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-radio-buttons/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-search-input/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-search-input/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-search-input/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-table/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-table/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-table/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-select-list/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-select-list/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-select-list/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-tooltip/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-tooltip/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-tooltip/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "rds-projects/rds-button/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-button/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-carousel/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-carousel/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-carousel/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-carousel/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-button-group/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  localDev: false\n}"
                }
            ],
            "rds-projects/rds-button-group/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button-group/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "rds-projects/rds-color-picker/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-color-picker/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev:false\r\n}"
                }
            ],
            "rds-projects/rds-color-picker/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-color-picker/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-file-uploader/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-file-uploader/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "rds-projects/rds-file-uploader/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-file-uploader/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-floating-labels/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-floating-labels/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-floating-labels/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-floating-labels/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-list-group/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-list-group/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  localDev:true\r\n}"
                }
            ],
            "rds-projects/rds-list-group/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-list-group/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev:true\r\n}"
                }
            ],
            "rds-projects/rds-radio-buttons/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-radio-buttons/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-radio-buttons/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-radio-buttons/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "rds-projects/rds-search-input/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-search-input/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-search-input/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-search-input/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "rds-projects/rds-table/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-table/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev:true\r\n}"
                }
            ],
            "rds-projects/rds-table/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-table/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "rds-projects/rds-select-list/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-select-list/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev: false\r\n}"
                }
            ],
            "rds-projects/rds-select-list/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-select-list/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "rds-projects/rds-tooltip/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-tooltip/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  localDev:false\r\n}"
                }
            ],
            "rds-projects/rds-tooltip/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-tooltip/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  localDev:true\r\n}"
                }
            ],
            "rds-projects/rds-button/src/app/rds-button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Sec",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AppComponent>",
                    "defaultValue": "(args: AppComponent) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "rds-projects/rds-button/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxButtonGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "horizontal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconButtonGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButtonGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/app/rds-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/app/rdsButtonGroup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RdsButtonGroupComponent",
                "coveragePercent": 18,
                "coverageCount": "2/11",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button-group/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sec",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/app/rds-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-button/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-carousel/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-carousel/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-carousel/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-carousel/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-carousel/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-color-picker/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-color-picker/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-color-picker/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-color-picker/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-color-picker/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-file-uploader/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-file-uploader/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-file-uploader/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-file-uploader/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-file-uploader/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-floating-labels/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-floating-labels/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-floating-labels/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-floating-labels/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-floating-labels/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-list-group/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-list-group/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-list-group/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-list-group/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-list-group/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-radio-buttons/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-radio-buttons/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-radio-buttons/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-radio-buttons/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-radio-buttons/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-search-input/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-search-input/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-search-input/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-search-input/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-search-input/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-select-list/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-select-list/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-select-list/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-select-list/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-select-list/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-table/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-table/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-table/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-table/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-table/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-tooltip/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-tooltip/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-tooltip/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-tooltip/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "rds-projects/rds-tooltip/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}